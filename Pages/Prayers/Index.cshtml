@page
@model prayer.Pages.Prayers.IndexModel
@using prayer.Models;

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Prayer[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Prayer[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Prayer[0].CreationTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Prayer[0].UpdateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Prayer[0].Recurrence)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Prayer[0].RecurrenceValue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Prayer[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Prayer[0].Category)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Prayer) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreationTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdateTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Recurrence)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RecurrenceValue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@foreach (var item in Model.Prayer) {
<div class="card @(item.Status == StatusOptions.Answered ? "border-success" : "")" style="width: 18rem;">
    <div class="card-body">
        <h6 class="text-body-tertiary"><a asp-page="../Categories/Details" asp-route-id="@item.Category.Id">@Html.DisplayFor(modelItem => item.Category.Name)</a></h6>
        <h5 class="card-title"><a asp-page="../Prayers/Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</a></h5>
        <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
    </div>
    <ul class="list-group list-group-flush">
        <li class="list-group-item">@Html.DisplayFor(modelItem => item.CreationTime)</li>
        <li class="list-group-item">@Html.DisplayFor(modelItem => item.Status)</li>
    </ul>
    <div class="card-body">
        <a class="card-link" asp-page="./Edit" asp-route-id="@item.Id">Edit</a>
        <a class="card-link" asp-page="./Details" asp-route-id="@item.Id">Details</a>
        <a class="card-link" asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
    </div>
</div>
}
